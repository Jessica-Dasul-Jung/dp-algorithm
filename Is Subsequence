/*
  Given a string s and a string t, check if s is subsequence of t.
  You may assume that there is only lower case English letters in both s and t. 
  t is potentially a very long (length ~= 500,000) string, and s is a short string (<=100).
  A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) 
  of the characters without disturbing the relative positions of the remaining characters. 
  (ie, "ace" is a subsequence of "abcde" while "aec" is not).
*/

class Solution {
public:
    bool isSubsequence(string s, string t) {
        int size = t.size();
        int subsize = s.size();
        int j = 0;
        int i = 0;
        while (i < subsize && j < size) {
            if (s[i] == t[j]) {
                i++;
            }
            j++;
        }
        return (i == subsize);
    }
};

/*
  Result:
    Runtime: 56 ms
    Memory Usage: 17.2 MB
*/
