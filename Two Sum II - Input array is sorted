/*
  Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number.
  The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2.

  Note:
    Your returned answers (both index1 and index2) are not zero-based.
    You may assume that each input would have exactly one solution and you may not use the same element twice.
*/

class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
        //ascending: small -> large
        int high = numbers.size() - 1;
        int low = 0;
        while (target != numbers[low] + numbers[high]) {
            if (numbers[low] + numbers[high] > target) {
                high--;
            }
            else {
                low++;
            }
        }
        vector<int> ret;
        ret.push_back(low + 1);
        ret.push_back(high + 1);
        return ret;
    }
};
