/*
  We have a collection of rocks, each rock has a positive integer weight.
  Each turn, we choose the two heaviest rocks and smash them together.  Suppose the stones have weights x and y with x <= y.  The result of this smash is:

  If x == y, both stones are totally destroyed;
  If x != y, the stone of weight x is totally destroyed, and the stone of weight y has new weight y-x.
  At the end, there is at most 1 stone left.  Return the weight of this stone (or 0 if there are no stones left.)
*/

class Solution {
public:
    int lastStoneWeight(vector<int>& stones) {
        make_heap(stones.begin(), stones.end());
        int stone1, stone2;
        int result_stone;
        int size = stones.size();

        while (stones.size() > 1) {
            stone1 = stones.front();
            pop_heap(stones.begin(), stones.end());
            stones.pop_back();
            
            stone2 = stones.front();
            pop_heap (stones.begin(), stones.end());
            stones.pop_back();
            
            result_stone = abs(stone1 - stone2);
            if (result_stone) { //not zero
                stones.push_back(result_stone);
                push_heap(stones.begin(), stones.end());
            }
        }
        if (stones.size() == 1) {
            return stones[0];
        }
        else return 0;
    }
};
