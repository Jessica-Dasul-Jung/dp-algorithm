/*
  Given a string S of '(' and ')' parentheses, we add the minimum number of parentheses ( '(' or ')', and in any positions ) 
  so that the resulting parentheses string is valid.
  
  Formally, a parentheses string is valid if and only if:
  It is the empty string, or
  It can be written as AB (A concatenated with B), where A and B are valid strings, or
  It can be written as (A), where A is a valid string.
  Given a parentheses string, return the minimum number of parentheses we must add to make the resulting string valid.
*/

class Solution {
public:
    int minAddToMakeValid(string S) {
        int sum = 0;
        int ret = 0;
        int i;
        int size = S.size();
        for (i = 0; i < size; i++) {
            if (S[i] == '(')
                sum++;
            else if (S[i] == ')')
                sum--;
            if (sum < 0) { 
                ret++; //need to add parentheses on the right side
                sum = 0;
            }
        }
        return ret + sum;
    }
};

/*
Result: 
  Runtime: 4 ms
  Memory Usage: 8.4 MB
*/
