/*
  Merge two sorted linked lists and return it as a new list. 
  The new list should be made by splicing together the nodes of the first two lists.
*/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode* node;
        if (l1 == nullptr && l2 == nullptr) {
            return nullptr;
        }
        else if (l1 == nullptr) {
            return l2;
        }
        else if (l2 == nullptr) {
            return l1;
        }
        else if (l1->val < l2->val) {
            node = new ListNode(l1->val);
            node->next = mergeTwoLists(l1->next, l2);
        }
        else {
            node = new ListNode(l2->val);
            node->next = mergeTwoLists(l1, l2->next);
        }
        return node;
    }
};
