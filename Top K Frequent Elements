class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        vector<int> ret;
        int size = nums.size();
        unordered_map<int, int> freq;
        int i;
        for (i = 0; i < size; i++) {
            freq[nums[i]]++;
        }
        priority_queue<pair<int,int>> pq;
        for (auto it : freq) {
            pq.push(make_pair(it.second, it.first));
        }
        int count = 0;
        while (!pq.empty() && count < k) {
            ret.push_back(pq.top().second);
            pq.pop();
            count++;
        }
        return ret;
    }
};
